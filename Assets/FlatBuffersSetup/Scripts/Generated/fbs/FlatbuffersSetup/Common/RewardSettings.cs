// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBuffersSetup.Common
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RewardSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static RewardSettings GetRootAsRewardSettings(ByteBuffer _bb) { return GetRootAsRewardSettings(_bb, new RewardSettings()); }
  public static RewardSettings GetRootAsRewardSettings(ByteBuffer _bb, RewardSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RewardSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatBuffersSetup.Common.RewardExt ExtType { get { int o = __p.__offset(4); return o != 0 ? (FlatBuffersSetup.Common.RewardExt)__p.bb.Get(o + __p.bb_pos) : FlatBuffersSetup.Common.RewardExt.NONE; } }
  public TTable? Ext<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public FlatBuffersSetup.Common.ResourceReward ExtAsResourceReward() { return Ext<FlatBuffersSetup.Common.ResourceReward>().Value; }
  public FlatBuffersSetup.Common.AbilityReward ExtAsAbilityReward() { return Ext<FlatBuffersSetup.Common.AbilityReward>().Value; }

  public static Offset<FlatBuffersSetup.Common.RewardSettings> CreateRewardSettings(FlatBufferBuilder builder,
      FlatBuffersSetup.Common.RewardExt ext_type = FlatBuffersSetup.Common.RewardExt.NONE,
      int extOffset = 0) {
    builder.StartTable(2);
    RewardSettings.AddExt(builder, extOffset);
    RewardSettings.AddExtType(builder, ext_type);
    return RewardSettings.EndRewardSettings(builder);
  }

  public static void StartRewardSettings(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddExtType(FlatBufferBuilder builder, FlatBuffersSetup.Common.RewardExt extType) { builder.AddByte(0, (byte)extType, 0); }
  public static void AddExt(FlatBufferBuilder builder, int extOffset) { builder.AddOffset(1, extOffset, 0); }
  public static Offset<FlatBuffersSetup.Common.RewardSettings> EndRewardSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBuffersSetup.Common.RewardSettings>(o);
  }
  public RewardSettingsT UnPack() {
    var _o = new RewardSettingsT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RewardSettingsT _o) {
    _o.Ext = new FlatBuffersSetup.Common.RewardExtUnion();
    _o.Ext.Type = this.ExtType;
    switch (this.ExtType) {
      default: break;
      case FlatBuffersSetup.Common.RewardExt.ResourceReward:
        _o.Ext.Value = this.Ext<FlatBuffersSetup.Common.ResourceReward>().HasValue ? this.Ext<FlatBuffersSetup.Common.ResourceReward>().Value.UnPack() : null;
        break;
      case FlatBuffersSetup.Common.RewardExt.AbilityReward:
        _o.Ext.Value = this.Ext<FlatBuffersSetup.Common.AbilityReward>().HasValue ? this.Ext<FlatBuffersSetup.Common.AbilityReward>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<FlatBuffersSetup.Common.RewardSettings> Pack(FlatBufferBuilder builder, RewardSettingsT _o) {
    if (_o == null) return default(Offset<FlatBuffersSetup.Common.RewardSettings>);
    var _ext_type = _o.Ext == null ? FlatBuffersSetup.Common.RewardExt.NONE : _o.Ext.Type;
    var _ext = _o.Ext == null ? 0 : FlatBuffersSetup.Common.RewardExtUnion.Pack(builder, _o.Ext);
    return CreateRewardSettings(
      builder,
      _ext_type,
      _ext);
  }
}

public class RewardSettingsT
{
  public FlatBuffersSetup.Common.RewardExtUnion Ext { get; set; }

  public RewardSettingsT() {
    this.Ext = null;
  }
}


static public class RewardSettingsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ExtType*/, 1 /*FlatBuffersSetup.Common.RewardExt*/, 1, false)
      && verifier.VerifyUnion(tablePos, 4, 6 /*Ext*/, FlatBuffersSetup.Common.RewardExtVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
