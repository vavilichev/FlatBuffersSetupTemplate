// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatbuffersSetup
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BuildingSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static BuildingSettings GetRootAsBuildingSettings(ByteBuffer _bb) { return GetRootAsBuildingSettings(_bb, new BuildingSettings()); }
  public static BuildingSettings GetRootAsBuildingSettings(ByteBuffer _bb, BuildingSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BuildingSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TypeId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public int BuildingCost { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatbuffersSetup.BuildingSettings> CreateBuildingSettings(FlatBufferBuilder builder,
      int typeId = 0,
      StringOffset nameOffset = default(StringOffset),
      int buildingCost = 0) {
    builder.StartTable(3);
    BuildingSettings.AddBuildingCost(builder, buildingCost);
    BuildingSettings.AddName(builder, nameOffset);
    BuildingSettings.AddTypeId(builder, typeId);
    return BuildingSettings.EndBuildingSettings(builder);
  }

  public static void StartBuildingSettings(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTypeId(FlatBufferBuilder builder, int typeId) { builder.AddInt(0, typeId, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddBuildingCost(FlatBufferBuilder builder, int buildingCost) { builder.AddInt(2, buildingCost, 0); }
  public static Offset<FlatbuffersSetup.BuildingSettings> EndBuildingSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatbuffersSetup.BuildingSettings>(o);
  }
  public BuildingSettingsT UnPack() {
    var _o = new BuildingSettingsT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BuildingSettingsT _o) {
    _o.TypeId = this.TypeId;
    _o.Name = this.Name;
    _o.BuildingCost = this.BuildingCost;
  }
  public static Offset<FlatbuffersSetup.BuildingSettings> Pack(FlatBufferBuilder builder, BuildingSettingsT _o) {
    if (_o == null) return default(Offset<FlatbuffersSetup.BuildingSettings>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateBuildingSettings(
      builder,
      _o.TypeId,
      _name,
      _o.BuildingCost);
  }
}

public class BuildingSettingsT
{
  public int TypeId { get; set; }
  public string Name { get; set; }
  public int BuildingCost { get; set; }

  public BuildingSettingsT() {
    this.TypeId = 0;
    this.Name = null;
    this.BuildingCost = 0;
  }
}


static public class BuildingSettingsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TypeId*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyField(tablePos, 8 /*BuildingCost*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
